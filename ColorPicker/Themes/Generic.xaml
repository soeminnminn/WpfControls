<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:ColorPicker"
    xmlns:themes="clr-namespace:ColorPicker.Themes"
    xmlns:converters="clr-namespace:ColorPicker.Converters">

    <converters:ColorToBrushConverter x:Key="ColorToBrushConverter" />
    <converters:ColorToHexConverter x:Key="ColorToHexConverter" />
    <converters:ColorToHexConverter x:Key="OpaqueColorToHexConverter" IsOpaque="True" />
    <converters:ColorToStringConverter x:Key="ColorToStringConverter" />
    <converters:ColorToStringConverter x:Key="OpaqueColorToStringConverter" IsOpaque="True" />
    <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter" />
    <converters:BoolToVisibilityConverter x:Key="InvertBoolToVisibilityConverter" InvertVisibility="True" />
    <converters:ValueToVisibilityConverter x:Key="ValueToVisibilityConverter" />
    <converters:DefinedColorToVisibilityConverter x:Key="DefinedColorToVisibilityConverter" />
    <converters:HueToColorConverter x:Key="HueToColorConverter" />

    <SolidColorBrush x:Key="ControlBrush" Color="{x:Static SystemColors.ControlColor}" />
    <SolidColorBrush x:Key="ControlTextBrush" Color="{x:Static SystemColors.ControlTextColor}" />
    
    <SolidColorBrush x:Key="SelectedBackground" Color="{x:Static SystemColors.GradientInactiveCaptionColor}" />
    <SolidColorBrush x:Key="SelectedBorder" Color="{x:Static SystemColors.ActiveCaptionColor}" />

    <SolidColorBrush x:Key="ActiveBorderBrush" Color="{x:Static SystemColors.ActiveBorderColor}" />
    <SolidColorBrush x:Key="InactiveBackgroundBrush" Color="{x:Static SystemColors.ControlColor}" />
    <SolidColorBrush x:Key="InactiveBorderBrush" Color="{x:Static SystemColors.ScrollBarColor}" />
    <SolidColorBrush x:Key="InactiveTextBrush" Color="{x:Static SystemColors.GrayTextColor}" />

    <DrawingImage x:Key="HsvImageSource">
        <DrawingImage.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="#FFF0C419" Geometry="F1 M16,16z M0,0z M9.37931,10.7586C9.37931,13.3487 7.27972,15.4483 4.68966,15.4483 2.09959,15.4483 0,13.3487 0,10.7586 0,8.16856 2.09959,6.06897 4.68966,6.06897 7.27972,6.06897 9.37931,8.16856 9.37931,10.7586z" />
                <GeometryDrawing Brush="#FFE64C3C" Geometry="F1 M16,16z M0,0z M12.6896,5.24137C12.6896,7.83143 10.5901,9.93102 7.99999,9.93102 5.40993,9.93102 3.31033,7.83143 3.31033,5.24137 3.31033,2.65131 5.40993,0.551712 7.99999,0.551712 10.5901,0.551712 12.6896,2.65131 12.6896,5.24137z" />
                <GeometryDrawing Brush="#FF13A085" Geometry="F1 M16,16z M0,0z M16,10.7586C16,13.3487 13.9004,15.4483 11.3104,15.4483 8.72029,15.4483 6.6207,13.3487 6.6207,10.7586 6.6207,8.16856 8.72029,6.06897 11.3104,6.06897 13.9004,6.06897 16,8.16856 16,10.7586z" />
            </DrawingGroup>
        </DrawingImage.Drawing>
    </DrawingImage>

    <DrawingBrush x:Key="CheckersBrush" Viewport="0,0,11,11" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Geometry="M0,0 L2,0 2,2, 0,2Z" Brush="White" />
                <GeometryDrawing Geometry="M0,1 L2,1 2,2 1,2 1,0 0,0Z" Brush="LightGray" />
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DrawingBrush x:Key="SmallCheckerBoardBrush" Viewport="0,0,7,7" ViewportUnits="Absolute" TileMode="Tile">
        <DrawingBrush.Drawing>
            <DrawingGroup>
                <GeometryDrawing Brush="White">
                    <GeometryDrawing.Geometry>
                        <RectangleGeometry Rect="0,0,1,1" />
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>

                <GeometryDrawing Brush="Black">
                    <GeometryDrawing.Geometry>
                        <GeometryGroup>
                            <RectangleGeometry Rect="0,0,0.50,0.50" />
                            <RectangleGeometry Rect="0.50,0.50,0.50,0.50" />
                        </GeometryGroup>
                    </GeometryDrawing.Geometry>
                </GeometryDrawing>
            </DrawingGroup>
        </DrawingBrush.Drawing>
    </DrawingBrush>

    <DataTemplate x:Key="ColorPresenterTemplate">
        <StackPanel Margin="4 0 4 0" Orientation="Horizontal" IsHitTestVisible="false">
            <Grid Width="13" Height="13" VerticalAlignment="Center">
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        Fill="{StaticResource SmallCheckerBoardBrush}" SnapsToDevicePixels="True"
                        Visibility="{Binding Converter={StaticResource DefinedColorToVisibilityConverter}}" />
                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        Fill="{Binding Converter={StaticResource ColorToBrushConverter}}" Stroke="Gray" SnapsToDevicePixels="True" />
                <TextBlock Text="?" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" 
                        Visibility="{Binding Converter={StaticResource ValueToVisibilityConverter}, ConverterParameter={x:Static local:ColorHelper.UndefinedColor}}" />
            </Grid>

            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center"
                                            Visibility="{Binding IsOpaqueColor, Mode=OneWay, Converter={StaticResource InvertBoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorPicker}}}"
                                            Text="{Binding Converter={StaticResource ColorToStringConverter}}" />

            <TextBlock Margin="8 0 0 0" VerticalAlignment="Center"
                                            Visibility="{Binding IsOpaqueColor, Mode=OneWay, Converter={StaticResource BoolToVisibilityConverter}, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type local:ColorPicker}}}"
                                            Text="{Binding Converter={StaticResource OpaqueColorToStringConverter}}" />
        </StackPanel>
    </DataTemplate>

    <DataTemplate x:Key="ColorItemTemplate">
        <Grid Margin="1 2 1 2" Width="16" Height="16" HorizontalAlignment="Center" SnapsToDevicePixels="True"
            ToolTip="{Binding Converter={StaticResource ColorToStringConverter}}">
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 Fill="{StaticResource SmallCheckerBoardBrush}" SnapsToDevicePixels="True"
                 Visibility="{Binding Converter={StaticResource DefinedColorToVisibilityConverter}}" />
            <Rectangle Stroke="{StaticResource ActiveBorderBrush}"
                 Fill="{Binding Converter={StaticResource ColorToBrushConverter}, UpdateSourceTrigger=PropertyChanged}"
                 SnapsToDevicePixels="True" />
            <TextBlock Text="?" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Visibility="{Binding Converter={StaticResource ValueToVisibilityConverter}, ConverterParameter={x:Static local:ColorHelper.UndefinedColor}}" />
        </Grid>
    </DataTemplate>

    <DataTemplate x:Key="BasicColorItemTemplate">
        <Grid Margin="1 2 1 2" Width="21" Height="16" HorizontalAlignment="Center" SnapsToDevicePixels="True"
            ToolTip="{Binding Converter={StaticResource ColorToStringConverter}}">
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 Fill="{StaticResource SmallCheckerBoardBrush}" SnapsToDevicePixels="True"
                 Visibility="{Binding Converter={StaticResource DefinedColorToVisibilityConverter}}" />
            <Rectangle Stroke="{StaticResource ActiveBorderBrush}"
                 Fill="{Binding Converter={StaticResource ColorToBrushConverter}, UpdateSourceTrigger=PropertyChanged}"
                 SnapsToDevicePixels="True" />
            <TextBlock Text="?" FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" 
                       Visibility="{Binding Converter={StaticResource ValueToVisibilityConverter}, ConverterParameter={x:Static local:ColorHelper.UndefinedColor}}" />
        </Grid>
    </DataTemplate>

    <Style x:Key="ColorItemContainerStyle" TargetType="ListBoxItem">
        <Setter Property="Padding" Value="0" />
    </Style>

    <Style x:Key="ComboBoxFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Rectangle Margin="4,4,21,4" StrokeThickness="1"
                        Stroke="{StaticResource ControlTextBrush}" StrokeDashArray="1 2" SnapsToDevicePixels="true" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="DownArrowGeometry">F1 M18,18z M0,0z M12.44,6.44L9,9.88 5.56,6.44 4.5,7.5 9,12 13.5,7.5z</Geometry>

    <Style x:Key="ComboBoxReadonlyToggleButton" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource {x:Type ToggleButton}}">
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="ClickMode" Value="Press" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Border x:Name="Bd" Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}"
                                HorizontalAlignment="Right">
                            <Viewbox Width="12" Height="12" Margin="3,1,2,0">
                                <Path Name="Arrow" Fill="{TemplateBinding Foreground}" Data="{StaticResource DownArrowGeometry}"
                                      Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" />
                            </Viewbox>
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedBackground}" />
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource SelectedBorder}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Bd" Property="BorderBrush" Value="{StaticResource InactiveBorderBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ItemsPanelTemplate x:Key="ColorItemsPanelTemplate">
        <UniformGrid Margin="0 2 0 2" Columns="10" HorizontalAlignment="Center"/>
    </ItemsPanelTemplate>

    <ItemsPanelTemplate x:Key="BasicColorItemsPanelTemplate">
        <UniformGrid Margin="0 2 0 2" Columns="8" HorizontalAlignment="Center"/>
    </ItemsPanelTemplate>

    <Style x:Key="HeaderBackground" TargetType="{x:Type Grid}">
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
    </Style>

    <Style x:Key="HeaderStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="2" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
    </Style>

    <Style x:Key="ComponentStyle" TargetType="{x:Type TextBlock}">
        <Setter Property="Padding" Value="2" />
    </Style>

    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Margin" Value="1" />
        <Setter Property="Background" Value="{StaticResource ControlBrush}" />
        <Setter Property="TextAlignment" Value="Right" />
    </Style>

    <Style x:Key="SliderStyle" TargetType="{x:Type Slider}">
        <Setter Property="Width" Value="60" />
    </Style>

    <Style x:Key="Box" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="BorderThickness" Value="0 1 0 1" />
    </Style>

    <Style x:Key="BottomBox" TargetType="{x:Type ListBox}">
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="BorderThickness" Value="0 1 0 0" />
    </Style>

    <Style x:Key="BoxB" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="BorderThickness" Value="0 1 0 1" />
    </Style>

    <Style x:Key="BottomBoxB" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{StaticResource ActiveBorderBrush}" />
        <Setter Property="BorderThickness" Value="0 1 0 0" />
    </Style>

    <Style TargetType="{x:Type local:ColorPickerPanel}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPickerPanel}">
                    <ScrollViewer HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Auto">
                        <StackPanel>
                            <Grid Style="{StaticResource HeaderBackground}">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition />
                                    <ColumnDefinition Width="Auto" />
                                    <ColumnDefinition Width="Auto" />
                                </Grid.ColumnDefinitions>

                                <TextBlock Style="{StaticResource HeaderStyle}"
                                    Text="{Binding Strings.ThemeColors,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Visibility="{Binding ShowHsvPanel, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}" />
                                <TextBlock Grid.Column="0" Style="{StaticResource HeaderStyle}"
                                    Text="{Binding Strings.CustomColor,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                    Visibility="{Binding ShowHsvPanel, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />

                                <ToggleButton Grid.Column="2" Padding="0" Margin="0,0,4,0"
                                        ToolTip="{Binding Strings.TogglePanelToolTip,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        IsChecked="{Binding ShowHsvPanel, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Style="{StaticResource {x:Static ToolBar.ToggleButtonStyleKey}}">
                                    <ToggleButton.Content>
                                        <Image Source="{StaticResource HsvImageSource}" Width="16" Height="16" Stretch="None" />
                                    </ToggleButton.Content>
                                </ToggleButton>
                            </Grid>

                            <Grid Visibility="{Binding ShowHsvPanel, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}">
                                <StackPanel Orientation="Vertical" x:Name="PART_PredefinedColorPanel">
                                    <ListBox
                                        ItemsSource="{Binding ThemeColors, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        BorderThickness="0 1 0 1" ItemTemplate="{StaticResource ColorItemTemplate}" ItemContainerStyle="{StaticResource ColorItemContainerStyle}"
                                        ItemsPanel="{StaticResource ColorItemsPanelTemplate}" />

                                    <StackPanel Orientation="Vertical">
                                        <TextBlock
                                            Text="{Binding Strings.StandardColors,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Style="{StaticResource HeaderStyle}" />
                                        <ListBox Style="{StaticResource Box}"
                                            ItemsSource="{Binding StandardColors, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            ItemTemplate="{StaticResource ColorItemTemplate}"  
                                            ItemContainerStyle="{StaticResource ColorItemContainerStyle}" 
                                            ItemsPanel="{StaticResource ColorItemsPanelTemplate}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical" Visibility="Collapsed">
                                        <TextBlock
                                            Text="{Binding Strings.BasicColors,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Style="{StaticResource HeaderStyle}" />
                                        <ListBox Style="{StaticResource Box}"
                                            ItemsSource="{Binding BasicColors, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            ItemTemplate="{StaticResource BasicColorItemTemplate}"  
                                            ItemContainerStyle="{StaticResource ColorItemContainerStyle}" 
                                            ItemsPanel="{StaticResource BasicColorItemsPanelTemplate}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical" 
                                        Visibility="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}">
                                        <TextBlock
                                            Text="{Binding Strings.OpacityVariations,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Style="{StaticResource HeaderStyle}" />
                                        <ListBox Style="{StaticResource Box}"
                                            ItemsSource="{Binding OpacityVariations, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            ItemTemplate="{StaticResource ColorItemTemplate}" 
                                            ItemContainerStyle="{StaticResource ColorItemContainerStyle}" 
                                            ItemsPanel="{StaticResource ColorItemsPanelTemplate}" />
                                    </StackPanel>

                                    <StackPanel Orientation="Vertical">
                                        <TextBlock
                                            Text="{Binding Strings.RecentColors,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            Style="{StaticResource HeaderStyle}" />
                                        <ListBox Style="{StaticResource BottomBox}"
                                            ItemsSource="{Binding RecentColors, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                            ItemTemplate="{StaticResource ColorItemTemplate}" ItemContainerStyle="{StaticResource ColorItemContainerStyle}" ItemsPanel="{StaticResource ColorItemsPanelTemplate}" />
                                    </StackPanel>
                                </StackPanel>
                            </Grid>

                            <Grid Visibility="{Binding ShowHsvPanel, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}">
                                <StackPanel>
                                    <Border Style="{StaticResource BoxB}">
                                        <Grid Margin="4">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="Auto" />
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition Height="Auto" />
                                            </Grid.RowDefinitions>
                                            <local:HsvControl x:Name="PART_HSV" Margin="1 0 1 0" BorderBrush="{StaticResource ActiveBorderBrush}" BorderThickness="1"
                                                SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Hue="{Binding Hue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Saturation="{Binding Saturation, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Value="{Binding Brightness, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <local:SpectrumSlider BorderBrush="{StaticResource ActiveBorderBrush}" BorderThickness="1"
                                                Value="{Binding Hue, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                                Grid.Row="0" Grid.Column="1" />
                                            <local:ColorSlider Grid.Row="1" Grid.Column="0"
                                                Background="{StaticResource CheckersBrush}"
                                                Visibility="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}"
                                                Value="{Binding Alpha, RelativeSource={RelativeSource Mode=TemplatedParent}}" BorderBrush="{StaticResource ActiveBorderBrush}" BorderThickness="1"
                                                LeftColor="#00000000" RightColor="#FF000000" />

                                        </Grid>
                                    </Border>
                                    <TextBlock
                                        Text="{Binding Strings.Values,RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                        Style="{StaticResource HeaderStyle}" />
                                    <Border Style="{StaticResource BottomBoxB}">
                                        <Grid Margin="4">
                                            <Grid.RowDefinitions>
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                                <RowDefinition />
                                            </Grid.RowDefinitions>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="20" />
                                                <ColumnDefinition Width="30" />
                                                <ColumnDefinition Width="10" />
                                                <ColumnDefinition Width="16" />
                                                <ColumnDefinition Width="30" />
                                                <ColumnDefinition Width="20" />
                                            </Grid.ColumnDefinitions>

                                            <Grid Grid.RowSpan="3" Margin="0,0,8,0" HorizontalAlignment="Center" Width="50" Height="50">
                                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                    Fill="{StaticResource CheckersBrush}" SnapsToDevicePixels="True"
                                                    Visibility="{Binding Converter={StaticResource DefinedColorToVisibilityConverter}}" />
                                                <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                                    Fill="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ColorToBrushConverter}}" 
                                                    Stroke="Gray" SnapsToDevicePixels="True" />
                                            </Grid>

                                            <TextBlock Grid.Row="0" Grid.Column="1" Text="R:" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="1" Grid.Column="1" Text="G:" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="2" Grid.Column="1" Text="B:" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="3" Grid.Column="1" Text="A:" 
                                                Visibility="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}"
                                                Style="{StaticResource ComponentStyle}" />

                                            <TextBlock Grid.Row="0" Grid.Column="4" Text="H:" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="1" Grid.Column="4" Text="S:" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="2" Grid.Column="4" Text="B:" Style="{StaticResource ComponentStyle}" />

                                            <TextBlock Grid.Row="0" Grid.Column="6" Text="&#176;" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="1" Grid.Column="6" Text="%" Style="{StaticResource ComponentStyle}" />
                                            <TextBlock Grid.Row="2" Grid.Column="6" Text="%" Style="{StaticResource ComponentStyle}" />

                                            <TextBox Grid.Row="0" Grid.Column="2" Style="{StaticResource TextBoxStyle}"
                                                Text="{Binding Red, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <TextBox Grid.Row="1" Grid.Column="2" Style="{StaticResource TextBoxStyle}"
                                                Text="{Binding Green, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <TextBox Grid.Row="2" Grid.Column="2" Style="{StaticResource TextBoxStyle}"
                                                Text="{Binding Blue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <TextBox Grid.Row="3" Grid.Column="2" Style="{StaticResource TextBoxStyle}"
                                                Visibility="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}"
                                                Text="{Binding Alpha, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                                            <TextBox Grid.Row="0" Grid.Column="5" Style="{StaticResource TextBoxStyle}"
                                                Text="{Binding Hue, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <TextBox Grid.Row="1" Grid.Column="5" Style="{StaticResource TextBoxStyle}"
                                                Text="{Binding Saturation, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                            <TextBox Grid.Row="2" Grid.Column="5" Style="{StaticResource TextBoxStyle}"
                                                Text="{Binding Brightness, UpdateSourceTrigger=PropertyChanged, RelativeSource={RelativeSource Mode=TemplatedParent}}" />

                                            <TextBox Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="4"
                                                Style="{StaticResource TextBoxStyle}" TextAlignment="Center" 
                                                Visibility="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource InvertBoolToVisibilityConverter}}"
                                                Text="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource ColorToHexConverter}}" />
                                            <TextBox Grid.Row="4" Grid.Column="2" Grid.ColumnSpan="4"
                                                Style="{StaticResource TextBoxStyle}" TextAlignment="Center" 
                                                Visibility="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}"
                                                Text="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}, Converter={StaticResource OpaqueColorToHexConverter}}" />
                                        </Grid>
                                    </Border>
                                </StackPanel>
                            </Grid>
                        </StackPanel>
                    </ScrollViewer>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SpectrumSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Background="Transparent" Width="16" Height="9">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="6" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="6" />
                        </Grid.ColumnDefinitions>
                        <Polygon Grid.Column="0" Stroke="White" StrokeThickness="1" Fill="Black"
                            Points="-0.5,0  4.5,4.5  -0.5,9" />
                        <Polygon Grid.Column="2" Stroke="White" StrokeThickness="1" Fill="Black"
                            Points="5.5,0  0.5,4.5  5.5,9" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SunkenFrameStyle" TargetType="{x:Type Label}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid>
                        <Border Margin="0,1"
                            BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="1,0,0,0" />
                        <Border Margin="1,0"
                            BorderBrush="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}" BorderThickness="0,1,0,0" />
                        <Border Margin="0,1" BorderBrush="#F8F8F8" BorderThickness="0,0,1,0" />
                        <Border Margin="1,0" BorderBrush="#F8F8F8" BorderThickness="0,0,0,1" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorPickerRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ColorSliderThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Width="9" Height="12">
                        <Polygon Fill="{DynamicResource {x:Static SystemColors.ControlLightLightBrushKey}}"
                                Points="4.5,0 9,5 9,11 0,11 0,5" />
                        <Polygon Fill="Black" Points="4.5,1 8,5 1,5" />
                        <Polygon Stroke="Black" StrokeThickness="1" Points="7.5,5.5 7.5,9.5 1.5,9.5 1.5,5.5" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ColorSlider}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Maximum" Value="255" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="SmallChange" Value="1" />
        <Setter Property="LargeChange" Value="10" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorSlider}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="8*" />
                            <RowDefinition Height="13" />
                            <RowDefinition Height="12*" />
                        </Grid.RowDefinitions>
                        <Border Margin="1" Grid.Row="1" Background="{TemplateBinding Background}" />
                        <Border Margin="1" Grid.Row="1">
                            <Border.Background>
                                <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                                    <GradientStop Color="{Binding LeftColor, RelativeSource={RelativeSource TemplatedParent}}" Offset="0" />
                                    <GradientStop Color="{Binding RightColor,RelativeSource={RelativeSource TemplatedParent}}" Offset="1" />
                                </LinearGradientBrush>
                            </Border.Background>
                        </Border>
                        <Border Margin="1" Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Track Grid.Row="1" Margin="-3,0,-2,0" x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}"
                                    Command="{x:Static Slider.DecreaseLarge}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}"
                                    Command="{x:Static Slider.IncreaseLarge}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{StaticResource ColorSliderThumbStyle}">
                                    <Thumb.RenderTransform>
                                        <TranslateTransform Y="5" />
                                    </Thumb.RenderTransform>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:SpectrumSlider}">
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Orientation" Value="Vertical" />
        <Setter Property="Maximum" Value="360" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:SpectrumSlider}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="10*" />
                            <ColumnDefinition Width="17" />
                            <ColumnDefinition Width="10*" />
                        </Grid.ColumnDefinitions>
                        <Grid Grid.Column="1">
                            <Border Margin="1" Background="{TemplateBinding Background}" />
                            <Label Style="{StaticResource SunkenFrameStyle}" />
                        </Grid>
                        <Border Grid.Column="1" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}" />

                        <Track Grid.Column="1" Margin="0,-3" x:Name="PART_Track">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}"
                                    Command="{x:Static Slider.DecreaseLarge}" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton Style="{StaticResource ColorPickerRepeatButtonStyle}"
                                    Command="{x:Static Slider.IncreaseLarge}" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb x:Name="Thumb" Style="{StaticResource SpectrumSliderThumbStyle}" />
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:ColorPicker}" BasedOn="{StaticResource {x:Type ComboBox}}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
        <Setter Property="Padding" Value="4,3" />
        <Setter Property="Stylus.IsFlicksEnabled" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:ColorPicker}">
                    <Grid Name="MainGrid" SnapsToDevicePixels="true">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="8"/>
                        </Grid.ColumnDefinitions>

                        <!-- The Popup color picker panel -->
                        <Popup Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" Placement="Bottom" MinHeight="280" MinWidth="214"
                               Margin="1" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}"
                               PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                            <themes:SystemDropShadowChrome x:Name="Shdw" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=MainGrid}">
                                <Border x:Name="DropDownBorder" BorderThickness="1"
                                        BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}"
                                        Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}">
                                    <local:ColorPickerPanel x:Name="PART_ColorPickerPanel"
                                              IsOpaqueColor="{Binding IsOpaqueColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                                              SelectedColor="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}" />
                                </Border>
                            </themes:SystemDropShadowChrome>
                        </Popup>

                        <!-- The Popup dropdown button (arrow) -->
                        <ToggleButton Grid.ColumnSpan="2" Grid.Column="0" Background="{TemplateBinding Background}"
                                      Foreground="{TemplateBinding Foreground}" BorderBrush="{TemplateBinding BorderBrush}" 
                                      Style="{StaticResource ComboBoxReadonlyToggleButton}"
                                      IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />

                        <!-- The combobox content -->
                        <ContentPresenter Grid.Column="0" IsHitTestVisible="false" Margin="{TemplateBinding Padding}"
                              Content="{Binding SelectedColor, RelativeSource={RelativeSource Mode=TemplatedParent}}"
                              ContentTemplate="{StaticResource ColorPresenterTemplate}"
                              VerticalAlignment="Center" HorizontalAlignment="Stretch"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                            <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                            <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource InactiveTextBrush}" />
                            <Setter Property="Background" Value="{StaticResource InactiveBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="HsvControlThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Stylus.IsPressAndHoldEnabled" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <Grid Height="12" Width="12">
                        <Ellipse Stroke="White" Margin="0" />
                        <Ellipse Stroke="Black" Margin="1" />
                        <Ellipse Stroke="White" Margin="2" />
                        <Line Stroke="#80000000" X1="0" Y1="6" X2="12" Y2="6" />
                        <Line Stroke="#80000000" X1="6" Y1="0" X2="6" Y2="12" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:HsvControl}">
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:HsvControl}">
                    <Grid>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                                    <GradientStop Offset="0" Color="#FFFFFFFF" />
                                    <GradientStop Offset="1"
                                        Color="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Hue, Converter={StaticResource HueToColorConverter}}" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Rectangle>
                            <Rectangle.Fill>
                                <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                                    <GradientStop Offset="0" Color="#00000000" />
                                    <GradientStop Offset="1" Color="#FF000000" />
                                </LinearGradientBrush>
                            </Rectangle.Fill>
                        </Rectangle>
                        <Border BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}" />
                        <Canvas ClipToBounds="true">
                            <Thumb Canvas.Left="-5" Canvas.Top="-5" x:Name="PART_Thumb"
                                    Style="{StaticResource HsvControlThumbStyle}">
                                <Thumb.RenderTransform>
                                    <TranslateTransform X="0" Y="0" />
                                </Thumb.RenderTransform>
                            </Thumb>
                        </Canvas>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
