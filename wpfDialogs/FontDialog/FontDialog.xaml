<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:wpfDialogs">

    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
    <local:ColorToBrushConverter x:Key="ColorToBrushConverter" />

    <Style TargetType="{x:Type local:FontFamilyList}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="IsTabStop" Value="false"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FontFamilyList}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBox x:Name="PART_EditableTextBox" Focusable="True" Background="Transparent" Padding="0,2,0,2" />

                        <Border x:Name="PART_ListBorder" Grid.Row="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1,0,1,1">
                            <ScrollViewer CanContentScroll="true" SnapsToDevicePixels="True">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="PART_ListBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FontFamilyListItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FontFamilyListItem}">
                    <Border x:Name="PART_Border" Padding="2" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TypefaceList}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TypefaceList}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBox x:Name="PART_EditableTextBox" Focusable="True" Background="Transparent" Padding="0,2,0,2" />

                        <Border x:Name="PART_ListBorder" Grid.Row="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1,0,1,1">
                            <ScrollViewer CanContentScroll="true" SnapsToDevicePixels="True">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="PART_ListBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:TypefaceListItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:TypefaceListItem}">
                    <Border x:Name="PART_Border" Padding="2" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FontSizeList}">
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FontSizeList}">
                    <Grid Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        
                        <TextBox x:Name="PART_EditableTextBox" Focusable="True" Background="Transparent" Padding="0,2,0,2" />

                        <Border x:Name="PART_ListBorder" Grid.Row="1" BorderBrush="{DynamicResource {x:Static SystemColors.ActiveBorderBrushKey}}" BorderThickness="1,0,1,1">
                            <ScrollViewer CanContentScroll="true" SnapsToDevicePixels="True">
                                <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>

                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="PART_ListBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FontSizeListItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:FontSizeListItem}">
                    <Border x:Name="PART_Border" Padding="2" Background="Transparent">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="true">
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type local:FontDialogWindow}">
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="ResizeMode" Value="NoResize" />
        <Setter Property="WindowStyle" Value="ToolWindow" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="SizeToContent" Value="WidthAndHeight" />
        <Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                        <AdornerDecorator>
                            <ContentPresenter/>
                        </AdornerDecorator>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Content">
            <Setter.Value>
                <Grid Margin="10,6,14,40">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="200" />
                        <ColumnDefinition Width="160" />
                        <ColumnDefinition Width="80"/>
                        <ColumnDefinition />
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition Height="160"/>
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>

                    <Label Content="_Font:" Target="FontFamilyInput" />
                    <local:FontFamilyList x:Name="FontFamilyInput" Grid.Row="1" Margin="4,0,4,0"
                                            SelectedItem="{Binding FontFamilyItem, Mode=TwoWay}"
                                            SelectedFontFamily="{Binding FontFamily, Mode=OneWay}"/>

                    <Label Content="Font st_yle:" Grid.Column="1" Target="TypefaceInput" />
                    <local:TypefaceList x:Name="TypefaceInput" Grid.Column="1" Grid.Row="1" Margin="4,0,4,0"
                                          SelectedFontFamily="{Binding FontFamilyItem, Mode=OneWay}"
                                          SelectedItem="{Binding TypefaceItem, Mode=TwoWay}"/>

                    <Label Content="_Size:" Grid.Column="2" Target="FontSizeInput" />
                    <local:FontSizeList x:Name="FontSizeInput" Grid.Column="2" Grid.Row="1" Margin="4,0,4,0"
                                          SelectedItem="{Binding FontSizeItem, Mode=TwoWay}"/>

                    <StackPanel Grid.Column="3" Grid.Row="1" Orientation="Vertical" Margin="4,0,0,0">
                        <Button Content="OK" Width="80" Height="24" IsDefault="True" Command="{Binding AcceptCommand}" />
                        <Button Content="Cancel" Width="80" Height="24" Margin="0,4,0,0" IsCancel="True" />
                    </StackPanel>

                    <GroupBox Grid.Row="2" Grid.RowSpan="2" Header="Effects" Margin="4,8,0,0">
                        <StackPanel Orientation="Vertical" Margin="8,10,0,0">
                            <CheckBox Content="Stri_keout" Margin="0,4,0,4" IsChecked="{Binding Strikeout}" />
                            <CheckBox Content="_Underline" Margin="0,4,0,4" IsChecked="{Binding Underline}"/>

                            <Label Content="Color:" Padding="0,8,0,2" Target="ColorInput" Visibility="{Binding ChooseColor, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <ComboBox x:Name="ColorInput" ItemsSource="{Binding AvailableColors}" Margin="0,0,12,4" 
                                      SelectedItem="{Binding FontColorItem, Mode=TwoWay}"
                                      Visibility="{Binding ChooseColor, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <StackPanel Orientation="Horizontal">
                                            <Rectangle Width="28" Height="16" Fill="{Binding Color, Converter={StaticResource ColorToBrushConverter}}" Stroke="Black" StrokeThickness="1" />
                                            <TextBlock Text="{Binding Name}" Margin="4,0,0,0" />
                                        </StackPanel>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                            </ComboBox>
                        </StackPanel>
                    </GroupBox>

                    <GroupBox Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" Header="Sample" Margin="4,8,0,0">
                        <TextBlock x:Name="PART_SampleText" TextAlignment="Center" Margin="0,24,0,24"
                                   Text="{Binding SampleText}" FontSize="{Binding FontSize}"
                                   FontFamily="{Binding FontFamily}" FontStyle="{Binding FontStyle}"
                                   FontWeight="{Binding FontWeight}" FontStretch="{Binding FontStretch}"
                                   TextDecorations="{Binding TextDecorations}"
                                   Foreground="{Binding FontColor, Converter={StaticResource ColorToBrushConverter}}"/>
                    </GroupBox>

                    <StackPanel Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="3" Orientation="Vertical" Margin="4,8,0,0">
                        <Label Content="Sc_ript:" Target="ScriptCombo" />
                        <ComboBox x:Name="ScriptCombo" Margin="4,0,4,0" IsEnabled="False" ItemsSource="{Binding Charsets}"
                                  SelectedItem="{Binding FontCharsetItem, Mode=TwoWay}">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding DisplayName}" Margin="2,0,2,0" />
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </StackPanel>
                </Grid>
            </Setter.Value>
        </Setter>
    </Style>
    
</ResourceDictionary>